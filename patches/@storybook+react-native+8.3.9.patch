diff --git a/node_modules/@storybook/react-native/dist/index.d.ts b/node_modules/@storybook/react-native/dist/index.d.ts
index f8eaa96..09905cc 100644
--- a/node_modules/@storybook/react-native/dist/index.d.ts
+++ b/node_modules/@storybook/react-native/dist/index.d.ts
@@ -1,5 +1,5 @@
 import * as _storybook_core_types from '@storybook/core/types';
-import { StoryIndex, PreparedStory, NormalizedStoriesSpecifier, StorybookConfig as StorybookConfig$1 } from '@storybook/core/types';
+import { StoryIndex, PreparedStory, NormalizedStoriesSpecifier, StorybookConfig as StorybookConfig$1, CoreConfig } from '@storybook/core/types';
 import { ReactRenderer } from '@storybook/react';
 import * as react_jsx_runtime from 'react/jsx-runtime';
 import { Channel } from '@storybook/core/channels';
@@ -92,6 +92,7 @@ interface StorybookConfig {
     stories: StorybookConfig$1['stories'];
     addons: string[];
     reactNative?: ReactNativeOptions;
+    core?: CoreConfig
 }
 
 export { StorybookConfig, getProjectAnnotations, prepareStories, start, updateView };
diff --git a/node_modules/@storybook/react-native/metro/withStorybook.d.ts b/node_modules/@storybook/react-native/metro/withStorybook.d.ts
new file mode 100644
index 0000000..10ba975
--- /dev/null
+++ b/node_modules/@storybook/react-native/metro/withStorybook.d.ts
@@ -0,0 +1,71 @@
+import { InputConfigT } from 'metro-config';
+
+/**
+ * Options for configuring WebSockets when using Storybook with React Native.
+ */
+interface WebsocketsOptions {
+  /**
+   * The port WebSocket server will listen on. Defaults to 7007.
+   */
+  port?: number;
+
+  /**
+   * The host WebSocket server will bind to. Defaults to 'localhost'.
+   */
+  host?: string;
+}
+
+/**
+ * Options for configuring Storybook with React Native.
+ */
+interface WithStorybookOptions {
+  /**
+   * The path to the Storybook config folder. Defaults to './.storybook'.
+   */
+  configPath?: string;
+
+  /**
+   * Whether Storybook is enabled. Defaults to true.
+   */
+  enabled?: boolean;
+
+  /**
+   * WebSocket configuration for hot-reloading features.
+   */
+  websockets?: WebsocketsOptions;
+
+  /**
+   * Whether to use JavaScript files for Storybook configuration instead of TypeScript. Defaults to false.
+   */
+  useJs?: boolean;
+}
+
+/**
+ * Configures Metro bundler to work with Storybook in React Native.
+ * This function wraps a Metro configuration to enable Storybook usage.
+ *
+ * @param config - The Metro bundler configuration to be modified.
+ * @param options - Options to customize the Storybook configuration.
+ * @returns The modified Metro configuration.
+ *
+ * @example
+ * const { getDefaultConfig } = require('expo/metro-config');
+ * const withStorybook = require('@storybook/react-native/metro/withStorybook');
+ * const path = require('path');
+ *
+ * const projectRoot = __dirname;
+ * const config = getDefaultConfig(projectRoot);
+ *
+ * module.exports = withStorybook(config, {
+ *   enabled: true,
+ *   configPath: path.resolve(projectRoot, './.storybook'),
+ *   websockets: { port: 9001, host: 'localhost' },
+ *   useJs: false,
+ * });
+ */
+function withStorybook(
+  config: InputConfigT,
+  options?: WithStorybookOptions,
+): InputConfigT;
+
+export = withStorybook;
